##  https://projecteuler.net/problem=12
############################################################
##  The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28
##  The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
##  
##  Let us list the factors of the first seven triangle numbers:
##
##     1: 1
##     3: 1,3
##     6: 1,2,3,6
##    10: 1,2,5,10
##    15: 1,3,5,15
##    21: 1,3,7,21
##    28: 1,2,4,7,14,28
##
##  We can see that 28 is the first triangle number to have over five divisors.
##  What is the value of the first triangle number to have over five hundred divisors?
#######################################################################################
##  BRUT-FORCE SOLUTION

primList = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251]

def e(x):
  tr = 0
  to500 = 0
  for i in range(1, 1 + x):
    tr += i
    a = allfactors(tr)
    if to500 < len(a):
        to500 = len(a)
    print(i, tr, a, to500)
  return tr

def allfactors(x):
  lis = []
  for i in primList:
    pow=1
    while x%i == 0:
        lis.append(i**pow)
        x /= i
        pow += 1
  return lis

##  e12(100)
 
